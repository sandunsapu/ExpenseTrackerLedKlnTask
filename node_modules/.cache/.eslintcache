[{"C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\index.js":"1","C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\App.js":"2","C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\modules\\home\\index.js":"3","C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\modules\\home\\TransactionComp.js":"4","C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\modules\\home\\OverviewComp.js":"5"},{"size":265,"mtime":1652904968780,"results":"6","hashOfConfig":"7"},{"size":885,"mtime":1652907955185,"results":"8","hashOfConfig":"7"},{"size":1640,"mtime":1652904968782,"results":"9","hashOfConfig":"7"},{"size":2079,"mtime":1652904968782,"results":"10","hashOfConfig":"7"},{"size":4290,"mtime":1652904968781,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eqq6wt",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\index.js",[],[],"C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\App.js",["30"],[],"C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\modules\\home\\index.js",["31"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport OverviewComp from \"./OverviewComp\";\r\nimport TransactionComp from \"./TransactionComp\";\r\n\r\nconst Container = styled.div`\r\n  background-color: white;\r\n  color: #0d1d2c;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 22px;\r\n  font-size: 18px;\r\n  width: 360px;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst HomeComponent = (props) => {\r\n    const [transactions, updateTransaction] = useState([]);\r\n    const [expense, updateExpense] = useState(0);\r\n    const [income, updateIncome] = useState(0);\r\n\r\n    const calculateBalance = () => {\r\n        let exp = 0;\r\n        let inc = 0;\r\n        transactions.map((payload) =>\r\n            payload.type === \"EXPENSE\"\r\n                ? (exp = exp + payload.amount)\r\n                : (inc = inc + payload.amount),\r\n        );\r\n        updateExpense(exp);\r\n        updateIncome(inc);\r\n    };\r\n    useEffect(() => calculateBalance(), [transactions]);\r\n\r\n    const addTransaction = (payload) => {\r\n        const transactionArray = [...transactions];\r\n        transactionArray.push(payload);\r\n        updateTransaction(transactionArray);\r\n    };\r\n    return (\r\n        <Container>\r\n            <OverviewComp\r\n                expense={expense}\r\n                income={income}\r\n                addTransaction={addTransaction}\r\n            />\r\n            {transactions?.length ? (\r\n                <TransactionComp transactions={transactions} />\r\n            ) : (\r\n                \"\"\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\nexport default HomeComponent;","C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\modules\\home\\TransactionComp.js",["32"],[],"import styled from \"styled-components\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Container = styled.div`\r\n  background-color: white;\r\n  color: #0d1d2c;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 10px 22px;\r\n  font-size: 18px;\r\n  width: 100%;\r\n  gap: 10px;\r\n  font-weight: bold;\r\n  overflow-y: auto !important;\r\n  & input {\r\n    padding: 10px 12px;\r\n    border-radius: 12px;\r\n    background: #e6e8e9;\r\n    border: 1px solid #e6e8e9;\r\n    outline: none;\r\n  }\r\n`;\r\nconst Cell = styled.div`\r\n  background-color: white;\r\n  color: #0d1d2c;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 10px 15px;\r\n  font-size: 14px;\r\n  border-radius: 2px;\r\n  border: 1px solid #e6e8e9;\r\n  align-items: center;\r\n  font-weight: normal;\r\n  justify-content: space-between;\r\n  border-right: 4px solid ${(props) => (props.isExpense ? \"red\" : \"green\")};\r\n`;\r\nconst TransactionCell = (props) => {\r\n  return (\r\n    <Cell isExpense={props.payload?.type === \"EXPENSE\"}>\r\n      <span>{props.payload?.desc}</span>\r\n      <span>LKR {props.payload?.amount}</span>\r\n    </Cell>\r\n  );\r\n};\r\nconst TransactionComp = (props) => {\r\n  const [searchText, updateSearchText] = useState(\"\");\r\n  const [filteredTransaction, updateTxn] = useState(props.transactions);\r\n\r\n  const filterData = (searchText) => {\r\n    if (!searchText || !searchText.trim().length) {\r\n      updateTxn(props.transactions);\r\n      return;\r\n    }\r\n    let txn = [...props.transactions];\r\n    txn = txn.filter((payload) =>\r\n      payload.desc.toLowerCase().includes(searchText.toLowerCase().trim()),\r\n    );\r\n    updateTxn(txn);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterData(searchText);\r\n  }, [props.transactions]);\r\n\r\n  return (\r\n    <Container>\r\n      Transactions\r\n      <input\r\n        placeholder=\"Search\"\r\n        onChange={(e) => {\r\n          updateSearchText(e.target.value);\r\n          filterData(e.target.value);\r\n        }}\r\n      />\r\n      {filteredTransaction?.map((payload) => (\r\n        <TransactionCell payload={payload} />\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\nexport default TransactionComp;","C:\\Users\\snwim\\ExpenseTrackerLedKlnTask\\src\\modules\\home\\OverviewComp.js",["33"],[],"import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 10px;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  width: 100%;\r\n`;\r\nconst ExpenseContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  gap: 12px;\r\n  margin: 20px;\r\n`;\r\nconst ExpenseBox = styled.div`\r\n  border-radius: 4px;\r\n  border: 1px solid #e6e8e9;\r\n  padding: 15px 20px;\r\n  font-size: 14px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n  width: 135px;\r\n  & span {\r\n    color: ${(props) => (props.isIncome ? \"green\" : \"red\")};\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n  }\r\n`;\r\nconst BalanceBox = styled.div`\r\n  font-size: 18px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n  font-weight: bold;\r\n  & span {\r\n    color: #0d1d2c;\r\n    opacity: 80%;\r\n    font-weight: bold;\r\n    font-size: 20px;\r\n  }\r\n`;\r\nconst AddTransaction = styled.div`\r\n  font-size: 15px;\r\n  background: #0d1d2c;\r\n  display: flex;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  cursor: pointer;\r\n  flex-direction: row;\r\n  border-radius: 4px;\r\n  font-weight: bold;\r\n`;\r\nconst AddTransactionContainer = styled.div`\r\n  font-size: 15px;\r\n  display: ${(props) => (props.isAddTxnVisible ? \"flex\" : \"none\")};\r\n  color: #0d1d2c;\r\n  flex-direction: column;\r\n  border-radius: 4px;\r\n  border: 1px solid #e6e8e9;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding: 15px 20px;\r\n  margin: 10px 20px;\r\n  gap: 10px;\r\n  & input {\r\n    width: 90%;\r\n    outline: none;\r\n    padding: 10px 12px;\r\n    border-radius: 4px;\r\n    border: 1px solid #e6e8e9;\r\n  }\r\n`;\r\nconst RadioBox = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  align-items: center;\r\n  margin: 10px 0;\r\n  & input {\r\n    width: unset;\r\n    margin: 0 10px;\r\n  }\r\n`;\r\nconst AddTransactionView = (props) => {\r\n  const [amount, setAmount] = useState();\r\n  const [desc, setDesc] = useState();\r\n  const [type, setType] = useState(\"EXPENSE\");\r\n\r\n  return (\r\n    <AddTransactionContainer isAddTxnVisible={props.isAddTxnVisible}>\r\n      <input\r\n        placeholder=\"Amount\"\r\n        type=\"number\"\r\n        value={amount}\r\n        onChange={(e) => setAmount(e.target.value)}\r\n      />\r\n      <input\r\n        placeholder=\"Description\"\r\n        value={desc}\r\n        onChange={(e) => setDesc(e.target.value)}\r\n      />\r\n      <RadioBox>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"expense\"\r\n          name=\"type\"\r\n          value=\"EXPENSE\"\r\n          checked={type === \"EXPENSE\"}\r\n          onChange={(e) => setType(e.target.value)}\r\n        />\r\n        <label htmlFor=\"expense\">Expense</label>\r\n        <input\r\n          type=\"radio\"\r\n          id=\"income\"\r\n          name=\"type\"\r\n          value=\"INCOME\"\r\n          checked={type === \"INCOME\"}\r\n          onChange={(e) => setType(e.target.value)}\r\n        />\r\n        <label htmlFor=\"Expense\">Income</label>\r\n      </RadioBox>\r\n\r\n      <AddTransaction\r\n        onClick={() =>\r\n          props.addTransaction({\r\n            id: Date.now(),\r\n            amount: Number(amount),\r\n            desc,\r\n            type,\r\n          })\r\n        }\r\n      >\r\n        Add Transaction\r\n      </AddTransaction>\r\n    </AddTransactionContainer>\r\n  );\r\n};\r\nconst OverviewComp = (props) => {\r\n  const [isAddTxnVisible, toggleAddTXn] = useState(false);\r\n  return (\r\n    <Container>\r\n      <BalanceBox>\r\n        Balance: LKR {props.income - props.expense}\r\n        <AddTransaction onClick={() => toggleAddTXn((isVisible) => !isVisible)}>\r\n          {isAddTxnVisible ? \"CANCEL\" : \"ADD\"}\r\n        </AddTransaction>\r\n      </BalanceBox>\r\n      {isAddTxnVisible && (\r\n        <AddTransactionView\r\n          isAddTxnVisible={isAddTxnVisible}\r\n          addTransaction={(payload) => {\r\n            props.addTransaction(payload);\r\n            toggleAddTXn((isVisible) => !isVisible);\r\n          }}\r\n        />\r\n      )}\r\n      <ExpenseContainer>\r\n        <ExpenseBox>\r\n          Expense<span>LKR {props.expense}</span>\r\n        </ExpenseBox>\r\n        <ExpenseBox isIncome={true}>\r\n          Income<span>LKR {props.income}</span>\r\n        </ExpenseBox>\r\n      </ExpenseContainer>\r\n    </Container>\r\n  );\r\n};\r\nexport default OverviewComp;",{"ruleId":"34","severity":1,"message":"35","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":13},{"ruleId":"38","severity":1,"message":"39","line":34,"column":41,"nodeType":"40","endLine":34,"endColumn":55,"suggestions":"41"},{"ruleId":"38","severity":1,"message":"42","line":63,"column":6,"nodeType":"40","endLine":63,"endColumn":26,"suggestions":"43"},{"ruleId":"34","severity":1,"message":"44","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":26},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'calculateBalance'. Either include it or remove the dependency array.","ArrayExpression",["45"],"React Hook useEffect has missing dependencies: 'filterData' and 'searchText'. Either include them or remove the dependency array.",["46"],"'useEffect' is defined but never used.",{"desc":"47","fix":"48"},{"desc":"49","fix":"50"},"Update the dependencies array to be: [calculateBalance, transactions]",{"range":"51","text":"52"},"Update the dependencies array to be: [filterData, props.transactions, searchText]",{"range":"53","text":"54"},[1012,1026],"[calculateBalance, transactions]",[1661,1681],"[filterData, props.transactions, searchText]"]